# hal_camera_default.te

binder_call(hal_camera_default, system_server)
binder_call(system_server, hal_camera_default)

allow hal_camera_default {
    app_efs_file
    efs_file
}:dir search;

allow hal_camera_default app_efs_file:file r_file_perms;

allow hal_camera_default {
    jsqz_device
    npu_device
}:chr_file rw_file_perms;

allow hal_camera_default {
    sysfs_battery
    sysfs_camera
    sysfs_npu_version
    sysfs_sensors
}:dir r_dir_perms;

allow hal_camera_default {
    sysfs_battery
    sysfs_camera
    sysfs_npu_version
    sysfs_sensors
}:file r_file_perms;

allow hal_camera_default {
    sysfs_camera_writable
    sysfs_mem_boost_writable
}:file rw_file_perms;

allow hal_camera_default rild:unix_stream_socket connectto;

allow hal_camera_default hal_graphics_composer_default:fd use;

allow hal_camera_default hal_graphics_mapper_hwservice:hwservice_manager find;
allow hal_camera_default system_suspend_hwservice:hwservice_manager find;

vndbinder_use(hal_camera_default)

wakelock_use(hal_camera_default)

get_prop(hal_camera_default, exported_camera_prop)
set_prop(hal_camera_default, vendor_camera_prop)

# Libexynoscamera3 wants to read ro.factory.factory_binary which is not properly namespaced
dontaudit hal_camera_default default_prop:file read;
